# docker network create --driver overlay --scope swarm proxy
version: "3.2"

services:
  reverse-proxy:
    image: traefik:latest # The official Traefik docker image
    command: 
      - "--web"    			# Enables the web UI
      - "--docker" 			# Tells Tr√¶fik to listen to docker
      - "--docker.watch"
      - "--docker.swarmMode"
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--loglevel=DEBUG"
    ports:
      - "80:80"     		# The HTTP port
      - "443:443"   		# The HTTPS port
      - "8181:8080" 		# The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 	# So that Traefik can listen to the Docker events
    networks:
      - proxy
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  tinyweb:
    image: cyd01/tinyweb
    volumes:
      - tinyweb_data:/www
    networks:
      - proxy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.backend=tinyweb"
        - "traefik.frontend.rule=PathPrefixStrip:/"
        - "traefik.docker.network=proxy"
        - "traefik.port=9999"

volumes:
  tinyweb_data:

networks:
  proxy:
    external: true
